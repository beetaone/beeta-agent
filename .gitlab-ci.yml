image: golang:latest

variables:
  REPO_NAME: gitlab.com/weeve/edge-server/edge-server-service


cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in

stages:
  - test
  - build
  - deploy

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

  # - mkdir -p /go/src/edge-server-service/ /go/src/_/builds
  # - cp -r $CI_PROJECT_DIR /go/src/edge-server-service/
  # - ln -s /go/src/edge-server-service /go/src/_/builds/edge-server-service
  # - export CC=clang-5.0
  # - make dep  
  # - FIRSTGOPATH="$(go env GOPATH | cut -d':' -f1)"
  # - GOPROJECT="$(go list -e -f '{{.ImportComment}}')"
  # - mkdir -p "$(dirname "${FIRSTGOPATH}/src/${GOPROJECT}")"
  # - ln -s "${CI_PROJECT_DIR}" "${FIRSTGOPATH}/src/${GOPROJECT}"
  # - cd "${FIRSTGOPATH}/src/${GOPROJECT}"


# format:
#   stage: test
#   script:
#     - go fmt $(go list ./... | grep -v /vendor/)
#     - go vet $(go list ./... | grep -v /vendor/)
#     - go test -race $(go list ./... | grep -v /vendor/)

validate:
  stage: test
  script:
    - go vet $(dirname $REPO_NAME)/edge-server-service


compile:
  stage: build
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/projbinary
  artifacts:
    paths:
      - projbinary



# unit_tests:
#   stage: test
#   script:
#     - make test

# race_detector:
#   stage: test
#   script:
#     - make race

# memory_sanitizer:
#   stage: test
#   script:
#     - make msan

# code_coverage:
#   stage: test
#   script:
#     - make coverage

# code_coverage_report:
#   stage: test
#   script:
#     - make coverhtml
#   only:
#   - master

# lint_code:
#   stage: test
#   script:
#     - make lint

# build:
#   stage: build
#   script:
#     - make
  
